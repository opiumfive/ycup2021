plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30


    defaultConfig {
        applicationId "com.opiumfive.ycupwars"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }


}

dependencies {

    /**
     * Салют проверяющим!
     * Концепция следующая:
     * "сервер" реализован через firebase realtime database
     * играющий запускает приложение и добавляет запись о себе в список игроков
     * попадание регистрируется у стреляющего (для упрощения) и стреляющий изменяет запись об "убийстве" в rdb для того, в кого попал
     * так же почему-то не захотелось внедрять ARCore, ведь на половине моих устройств он не поддерживается, и я реализовал отображение маркеров других игроков
     * самостоятельно - для ориентации устройства использовал классную наработку sensor_fusion от наших русских ребят, а углы между игроками вычисляю через координаты GPS
     * кстати, в помещении будет сложно играть из-за погрешностей GPS
     *
     * еще уточню, что у меня нет как таковой "сессии" с началом и окончанием,
     * т.е. игра как бы никогда не заканчивается формально, при убийстве можно спустя 5 секунд "перезайти" в игру
     * очки сбрасываются при новом заходе в игру
     *
     * Присутствующие проблемы:
     * - если свернуть приложение и развернуть - все может работать хуже и лучше перезайти в приложение
     *
     * В качестве возможных доработок отмечу:
     * - создание "лобби" как раз для реализации отдельных независимых сессий,
     * - на карте видно не только ближайших участников, а всех
     * - на экране показывается стрелка, в какой стороне находится ближайший враг
     * - сглаживание GPS с помощью sensor_fusion (если успею, сделаю до сдачи работы),
     * - использование все же AR для более красивого отображения 3d маркеров
     * - режим игры "в помещении" через AR
     * - оптимизацию структуры rdb/реализацию собственного сервера - для того чтобы клиенты были более тонкими
     */

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    // firebase realtime database
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database:19.2.1'

    // местоположение и карты
    implementation 'com.github.BirjuVachhani:locus-android:3.2.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.maps.android:android-maps-utils:2.2.6'

    // превью с камеры
    def camerax_version = '1.0.0-rc01'
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation 'androidx.camera:camera-view:1.0.0-alpha20'

    // генерация рандомного имени игрока
    implementation 'com.github.javafaker:javafaker:1.0.2'

    implementation 'com.fxn769:cue:1.1' // toasts

}